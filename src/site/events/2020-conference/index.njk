---
layout: layouts/_base.njk
title: 2020 Annual Conference
sponsors:
  - name: Dada.art
    image: /images/sponsors-2020/dada-logo.png
    href: "https://dada.nyc/"
  - name: Democracy Earth
    image: /images/sponsors-2020/democracy-earth-logo.png
    href: "https://democracy.earth/"
  - name: Gitcoin
    image: /images/sponsors-2020/gitcoin-logo.svg
    href: "https://gitcoin.co/"
  - name: Idena
    image: /images/sponsors-2020/idena-logo.jpeg
    href: "https://idena.io/"
  - name: Insper
    image: /images/sponsors-2020/insper-logo.png
    href: "https://www.insper.edu.br/"
  - name: Wildcards
    image: /images/sponsors-2020/wildcards-logo.png
    href: "https://wildcards.world/"
  - name: Ocean Protocol
    image: /images/sponsors-2020/ocean-protocol-logo.svg
    href: "https://oceanprotocol.com/"
  - name: Hewlett Foundation
    image: #
    href: "https://hewlett.org/"
  - name: Microsoft
    image: #
    href: "https://www.microsoft.com/"
---

<!-- prettier-ignore -->
{% import "components/close-button.njk" as closeButton %}

<!-- prettier-ignore -->
{{ closeButton.render(href="/events") }}
<main class="grid grid-cols-layout-4 lg:grid-cols-layout-16 py-8">
  <header
    class="col-span-columns lg:col-start-column-1 lg:col-end-gutter-14 justify-self-center lg:justify-self-start mb-4"
  >
    <h1 class="font-display text-size-display lg:text-size-lg/display">
      2020 Annual Conference
    </h1>
  </header>
  <section
    class="col-span-columns grid grid-cols-16 gap-x-8 pt-4 border-t mb-8"
  >
    <h2 class="col-start-1 col-span-4">Keynote Speakers:</h2>
    <ul class="col-start-5 col-span-12">
      <!-- prettier-ignore -->
      {% for s in keynoteSpeakers2020 %}
      <li class="comma-separated">
        <span>{{ s.name }} ({{ s.title }})</span>
      </li>
      <!-- prettier-ignore -->
      {% endfor %}
    </ul>
  </section>
  <section
    class="col-span-columns grid grid-cols-16 gap-x-8 pt-4 border-t mb-8"
  >
    <h2 class="col-start-1 col-span-4">Supporters:</h2>
    <ul class="col-start-5 col-span-12">
      <!-- prettier-ignore -->
      {% for s in sponsors %}
      <li class="comma-separated">
        <a class="see-more-button" href="{{ s.href }}">{{ s.name }}</a>
      </li>
      <!-- prettier-ignore -->
      {% endfor %}
    </ul>
  </section>
  <section class="col-span-columns mt-64 mb-8">
    <h2 class="pb-4 border-b text-size--1 uppercase">Watch the replays</h2>
    <ul id="videos">
      <!-- prettier-ignore -->
      {% for v in youtube2020 %}
      <li id="v{{ v.videoId }}">
        <a
          href="#v{{ v.videoId }}"
          class="grid grid-cols-16 items-baseline gap-x-8 py-8 border-b"
        >
          <div class="hidden open:block col-span-16 mb-4">
            <div data-youtube-container class="events_youtube-container"></div>
          </div>
          <h3 class="col-start-1 col-span-8 text-size--1 uppercase">
            {{ v.title }}
          </h3>
          <p class="block open:hidden col-start-9 col-span-8">
            {{ v.speakers }}
          </p>
          <p
            class="hidden open:block col-start-1 col-span-12 mt-4 text-size--1"
          >
            {{ v.description | escape | nl2br }}
          </p>
        </a>
      </li>
      <!-- prettier-ignore -->
      {% endfor %}
    </ul>
  </section>
</main>
<template id="youtube-template">
  <iframe
    src="https://www.youtube-nocookie.com/embed/${videoId}"
    frameborder="0"
    allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"
    allowfullscreen
  ></iframe>
</template>
<script>
  const $youtubeTemplate = document.getElementById("youtube-template");
  function makeYoutubeIframe(videoId) {
    const $youtubeIframe = $youtubeTemplate.content.firstElementChild.cloneNode(
      true
    );
    $youtubeIframe.src = `https://www.youtube-nocookie.com/embed/${videoId}`;
    console.log($youtubeIframe);
    return $youtubeIframe;
  }

  const $videos = document.getElementById("videos");
  function showVideo(videoId) {
    // Close a video if it's open
    const $maybeOpenVideo = $videos.querySelector(".open");
    if ($maybeOpenVideo) {
      $maybeOpenVideo.classList.remove("open");
      const $youtubeContainer = $maybeOpenVideo.querySelector(
        "[data-youtube-container]"
      );
      $youtubeContainer.remove($youtubeContainer.firstChild);
    }

    // Open a video if it exists
    const $toOpenVideo = $videos.querySelector(`#v${videoId}`);
    if ($toOpenVideo) {
      $toOpenVideo.classList.add("open");
      const $youtubeContainer = $toOpenVideo.querySelector(
        "[data-youtube-container]"
      );
      $youtubeContainer.appendChild(makeYoutubeIframe(videoId));
      $toOpenVideo.scrollIntoView();
    }
  }

  const hashRegex = /^#v([a-zA-Z0-9\-]*)$/;
  window.addEventListener("hashchange", function (e) {
    const match = hashRegex.exec(window.location.hash);
    if (match) {
      showVideo(match[1]);
    }
  });
  const match = hashRegex.exec(window.location.hash);
  if (match) {
    showVideo(match[1]);
  }
</script>
